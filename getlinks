#!/bin/bash - 
#===============================================================================
#
#          FILE: getlinks.sh
#
#          TODO: add differentiation of soft- & hard-links
#===============================================================================

RED='\033[1;31m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m'

default_dir="$(pwd)"
search_dir="${default_dir}"
list=()
linkAmount=0
search_pattern=''
list_hidden='no'
parsed_arguments=''

function print_help(){

# cli tool to list all symbolic links (and where they point to) in a folder
#
#     USAGE: getlinks [options] [folder_to_check]
#
#     OPTIONS:
#         --help	 → print this help message
#         -g | --grep	 → filter results by regex pattern
#         -h | --hidden	 → list hidden files, too

printf "${CYAN}cli tool to list all symbolic links (and where they point to) in a folder\n\n\tUSAGE: getlinks [options] [folder_to_check]\n\n\tOPTIONS:\n\t\t--help\t → print this help message\n\t\t-g | --grep\t → filter results by regex pattern\n\t\t-h | --hidden\t → list hidden files, too${NC}\n"
exit 0
}

function gatherLinkList(){
	if [[ "$list_hidden" == 'no' ]]
	then
		raw_link_list=$(ls -l "$search_dir")
	else [[ "$list_hidden" == 'yes' ]]
		raw_link_list=$(ls -la "$search_dir")
	fi
	while read line
	do
		list+=("$line")
	done< <( grep -P '^l' <<< ${raw_link_list} | grep -P "${search_pattern}" | sed 's~[a-z ]\+[0-9][a-zA-Z ]\+.\+ [0-9][0-9]:\?[0-9][0-9] ~~' | sed 's~->~→~g;s~^ *~~;s~^~ ~')

	linkAmount=${#list[@]}
}

function printLinkList(){
	i=0
	until [[ "$i" == "$linkAmount" ]];do
		echo "${list[$i]}"
		i=$((i+1))
	done
}

function printOutput(){
	printf "${BLUE}${linkAmount} ${CYAN}soft-links in directory: ${WHITE}\'$search_dir\'${NC}\n${WHITE}---\n${NC}"
	
	printLinkList
	
	printf "${WHITE}---\n${NC}"
}

function printNoOutput(){
	printf "${RED} No soft-links found in directory: ${WHITE}\'$search_dir\'${NC}\n" >&2
}

# processing arguments ------------------
parsed_arguments=$(getopt -a -n getlinks -o -hg: --long help,grep:,hidden -- "$@")
if [ "$?" != "0" ]; then
    print_help
fi

eval set -- "$parsed_arguments"
unset parsed_arguments

while :
do
    case "$1" in
      --help) print_help; shift;;
      -g | --grep) search_pattern="$2"; shift 2;;
      -h | --hidden) list_hidden='yes'; shift;;
      --) shift; break;;
      *) search_dir="$(realpath $1)"; shift;;
    esac
done
# ---------------------------------------

if [[ "$search_dir" != '/'* ]]
then
	search_dir="${PWD}/$search_dir"
fi
if [[ "$search_dir" != *'/' ]]
then
	search_dir="${search_dir}/"
fi

gatherLinkList

if [[ "$linkAmount" -eq 0 ]]
then
	printNoOutput
	exit 1
else
	printOutput
fi
